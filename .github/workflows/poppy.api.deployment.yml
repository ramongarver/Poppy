name: Poppy [API] / App / Deployment

on:
  push:
    paths:
      - 'api/**'
    branches: [ "main" ]
  pull_request:
    paths:
    - 'api/**'
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  test:
    name: Test app
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE poppy;' -uroot -proot
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
          
      - name: Clean and validate Maven project
        run: mvn clean validate --file api/pom.xml
  
      - name: Run Unit tests
        run: mvn test --file api/pom.xml
        env: 
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

  build-and-push:
    name: Build and push app to ACR
    runs-on: ubuntu-latest
    environment: PRODUCTION
    
    steps:
    - name: Access secrets and variables
      run: |
        echo "SPRING_PROFILE: ${{ vars.SPRING_PROFILE }}"      
        echo "DB_HOST: ${{ vars.DB_HOST }}"
        echo "DB_PORT: ${{ vars.DB_PORT }}"
        echo "DB_NAME: ${{ vars.DB_NAME }}"
        echo "DB_USERNAME: ${{ secrets.DB_USERNAME }}"
        echo "DB_PASSWORD: ${{ secrets.DB_PASSWORD }}"
        echo "JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}"
    
    - name: Build with Maven
      run: mvn -B package --file api/pom.xml -DskipTests
  
    - name: Move JAR
      run: mv api/target/api-0.0.1-SNAPSHOT.jar api/api-0.0.1-SNAPSHOT.jar
  
    - name: List files in api/target/
      run: ls -l api/
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Azure Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ vars.ACR_REGISTRY }}.azurecr.io
        username: ${{ secrets.AZURE_CLIENT_ID }}
        password: ${{ secrets.AZURE_CLIENT_SECRET }}
    
    - name: Get the current date
      run: echo "CURRENT_DATE=$(date +'%Y_%m_%d_%H_%M')" >> $GITHUB_ENV

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: api/
        push: true
        tags: ${{ vars.ACR_REGISTRY }}.azurecr.io/poppyapi:latest-${{ github.sha }}
        build-args: SPRING_PROFILE=${{ vars.SPRING_PROFILE }}
  
  deploy-to-production:
      name: Deploy to production
      if: (github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch') && github.event_name != 'pull_request'
      needs: build-and-test
      runs-on: ubuntu-latest
      environment: PRODUCTION
      steps:
        - name: Login to Azure
          run: |
            az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

        - name: Set environment variables in Azure
          run: |
            az webapp config appsettings set --name poppyapi --resource-group Poppy --settings SPRING_PROFILES_ACTIVE="${{ vars.SPRING_PROFILE }}" WEBSITES_PORT=${{ vars.WEBSITES_PORT }} DB_HOST="${{ vars.DB_HOST }}" DB_PORT="${{ vars.DB_PORT }}" DB_NAME="${{ vars.DB_NAME }}" DB_USERNAME="${{ secrets.DB_USERNAME }}" DB_PASSWORD="${{ secrets.DB_PASSWORD }}" JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}"

        - name: Deploy to production
          id: deploy-to-appservice
          uses: azure/webapps-deploy@v2
          with:
            app-name: poppyapi
            images: ${{ vars.ACR_REGISTRY }}.azurecr.io/poppyapi:latest-${{ github.sha }}

        - name: Logout from Azure
          run: az logout
      
